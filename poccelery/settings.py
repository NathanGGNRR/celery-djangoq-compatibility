"""
Django settings for poccelery project.

Generated by 'django-admin startproject' using Django 2.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "vk83b2)@lmwbr158lv%av6(@65jo1jc+4&0jnj3^^%zv3u#)hx"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "example",
    "corsheaders",
    "django_q",
    "django_celery_results",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


ROOT_URLCONF = "poccelery.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "poccelery.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "static/static/"

RELATIVE_MEDIA_ROOT = f"static/media/"

MEDIA_ROOT = os.path.join(BASE_DIR, RELATIVE_MEDIA_ROOT)

MEDIA_URL = "/media/"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres",
        "PASSWORD": "root",
        "HOST": "postgresql",
        "PORT": "5432",
    }
}

Q_CLUSTER = {
    "name": "CELERY-Q",
    "label": "TÃ¢ches de fond",
    "workers": 1,  # Has to be limited to one because of concurrency issues during pdf conversion
    "timeout": 60 * 60,  # maximum time for a task to run -> might need adjustment
    "retry": 60 * 60 * 2,  # retry failed/timeouted task after x seconds
    "queue_limit": 16,  # tasks kept in memory -> does not limit maximum tasks
    "orm": "default",  # postgres
    "has_replica": True,
    "catch_up": False,  # False will launch the scheduled task once to catch up instead of one time per missed schedule
}

CORS_ORIGIN_ALLOW_ALL = True


CELERY_BROKER_URL = "redis://redis:6379/0"
CELERY_RESULT_BACKEND = 'django-db'
CELERY_QUEUES = {
    "esms_flow": {"exchange": "default"},
    "lpi_flow": {"exchange": "default"},
    "cnsa_flow": {"exchange": "default"}
}


USE_TZ = False


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "readable": {
            "format": "%(levelname)s %(asctime)s %(module)s:%(pathname)s:%(lineno)d -> %(message)s"
        },
    },
    "handlers": {
        "celery": {
            "level": "DEBUG",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": "logs/celery.log",
            "when": "D",
            "interval": 30,
            "backupCount": 2,
            "formatter": "readable",
        },
    },
    "loggers": {
        "celery": {
            "handlers": ["celery"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
}
